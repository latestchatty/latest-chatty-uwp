<!--
    !!!!!IMPORTANT!!!!!
    Do not alter the order elements appear in without knowing what you're doing.
    Z-ordering is important for control visibility and interaciton prevention.
-->

<!--  ReSharper disable UnusedMember.Local  -->
<!--  ReSharper disable Xaml.RedundantResource  -->
<!--  ReSharper disable NotAccessedField.Local  -->
<views:ShellTabView
    x:Class="Werd.Views.InlineChattyFast"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:collections="using:Microsoft.Toolkit.Collections"
    xmlns:common="using:Werd.Common"
    xmlns:converters="using:Werd.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:Werd.Controls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:model="using:Werd.DataModel"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:views="using:Werd.Views"
    x:Name="PageRoot"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    NavigationCacheMode="Required"
    mc:Ignorable="d">
    <Page.Resources>
        <ResourceDictionary>
            <converters:NumberLimitConverter x:Key="NewChattyCountConverter" Limit="9" />
            <converters:EqualsZeroVisibilityConverter x:Key="EqualsZeroVisibilityConverter" />
        </ResourceDictionary>
    </Page.Resources>

    <Grid Margin="8,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid x:Name="ChattyCommandBarGroup" Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel
                Grid.Column="0"
                VerticalAlignment="Center"
                Orientation="Horizontal">

                <TextBlock
                    Margin="6,0,0,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Text="Filter:" />
                <ComboBox
                    x:Name="FilterCombo"
                    MinWidth="10"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderThickness="0"
                    SelectedIndex="{x:Bind Path=Settings.FilterIndex, Mode=TwoWay}"
                    SelectionChanged="FilterChanged"
                    Style="{StaticResource FilterCombo}">
                    <ComboBox.Items>
                        <ComboBoxItem Tag="all">All</ComboBoxItem>
                        <ComboBoxItem Tag="collapsed">Collapsed</ComboBoxItem>
                        <ComboBoxItem Tag="cortex">Cortex</ComboBoxItem>
                        <ComboBoxItem Tag="new">New</ComboBoxItem>
                        <ComboBoxItem Tag="news">News</ComboBoxItem>
                        <ComboBoxItem Tag="pinned">Pinned</ComboBoxItem>
                        <ComboBoxItem Tag="participated">Participated</ComboBoxItem>
                        <ComboBoxItem Tag="has replies">Has replies</ComboBoxItem>
                        <ComboBoxItem IsEnabled="False">
                            <Rectangle Height="1" Fill="Gray" />
                        </ComboBoxItem>
                        <ComboBoxItem Tag="search">Search</ComboBoxItem>
                    </ComboBox.Items>
                </ComboBox>

                <TextBlock
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    Text="Sort:" />
                <ComboBox
                    x:Name="OrderCombo"
                    Margin="6,0,0,0"
                    VerticalAlignment="Center"
                    Background="Transparent"
                    BorderThickness="0"
                    SelectedIndex="{x:Bind Path=Settings.OrderIndex, Mode=TwoWay}"
                    SelectionChanged="SortChanged"
                    Style="{StaticResource FilterCombo}">
                    <ComboBox.Items>
                        <ComboBoxItem Tag="hot">Hot</ComboBoxItem>
                        <ComboBoxItem Tag="latestreply">Latest</ComboBoxItem>
                        <ComboBoxItem Tag="mostreplies">Reply count</ComboBoxItem>
                        <ComboBoxItem Tag="hasnewreplies">New replies</ComboBoxItem>
                        <ComboBoxItem Tag="participated">Participated</ComboBoxItem>
                        <!--<ComboBoxItem Tag="lol">Lols</ComboBoxItem>
							<ComboBoxItem Tag="inf">Infs</ComboBoxItem>-->
                    </ComboBox.Items>
                </ComboBox>
            </StackPanel>
            <StackPanel
                Grid.Column="1"
                Margin="0,0,16,0"
                HorizontalAlignment="Stretch"
                FlowDirection="RightToLeft"
                Orientation="Horizontal">
                <Button
                    x:Name="SortThreadsButton"
                    Click="ReSortClicked"
                    FlowDirection="LeftToRight"
                    IsEnabled="{x:Bind Path=ChattyManager.UnsortedChattyPosts, Mode=OneWay}"
                    Style="{StaticResource InlineButton}">
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="F5" />
                    </Button.KeyboardAccelerators>
                    <ToolTipService.ToolTip>
                        <StackPanel Orientation="Vertical">
                            <TextBlock Text="Re-Sort Threads" />
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{x:Bind Path=ChattyManager.NewThreadCount, Mode=OneWay}" Visibility="{x:Bind Path=ChattyManager.NewThreadCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}, Mode=OneWay}" />
                                <TextBlock
                                    Margin="4,0,0,0"
                                    Text="new root post(s)"
                                    Visibility="{x:Bind Path=ChattyManager.NewThreadCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}, Mode=OneWay}" />
                            </StackPanel>
                        </StackPanel>
                    </ToolTipService.ToolTip>
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" Text="" />
                            <TextBlock
                                Margin="6,0,0,0"
                                VerticalAlignment="Center"
                                FontFamily="Segoe UI"
                                FontSize="14"
                                Text="{x:Bind Path=ChattyManager.NewThreadCount, Converter={StaticResource NewChattyCountConverter}, Mode=OneWay}"
                                Visibility="{x:Bind Path=ChattyManager.NewThreadCount, Converter={StaticResource GreaterThanZeroVisibilityConverter}, Mode=OneWay}" />
                            <TextBlock
                                Margin="4,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="14"
                                Text=""
                                Visibility="{x:Bind Path=ChattyManager.NewRepliesToUser, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
                        </StackPanel>
                    </Button.Content>
                </Button>
                <AppBarSeparator />
                <Button
                    Click="MarkAllRead"
                    Content="&#xE8C3;"
                    Style="{StaticResource InlineButton}"
                    ToolTipService.ToolTip="Mark All Threads Read" />
                <AppBarSeparator />
                <Button
                    x:Name="NewRootPostButton"
                    Click="NewRootPostButtonClicked"
                    Content="&#xE90A;"
                    Style="{StaticResource InlineButton}"
                    ToolTipService.ToolTip="New Root Post">
                    <Button.KeyboardAccelerators>
                        <KeyboardAccelerator Key="N" Modifiers="Control" />
                    </Button.KeyboardAccelerators>
                </Button>
            </StackPanel>
        </Grid>
        <Grid x:Name="ChattyListGroup" Grid.Row="1">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <TextBox
                x:Name="SearchTextBox"
                Grid.Row="1"
                Margin="6"
                KeyUp="SearchKeyUp"
                PlaceholderText="search"
                Visibility="{x:Bind ShowSearch, Mode=OneWay, Converter={StaticResource BoolToVisConverter}}" />
            <ProgressBar
                x:Name="FullRefreshProgress"
                Grid.Row="2"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top"
                IsIndeterminate="True"
                Visibility="{x:Bind Path=ChattyManager.IsFullUpdateHappening, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
            <Viewbox
                Grid.Row="3"
                MaxHeight="50"
                StretchDirection="Both"
                Visibility="{x:Bind Path=ChattyManager.ChattyIsLoaded, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}">
                <TextBlock
                    x:Name="NoSearchResults"
                    Text="No results."
                    Visibility="{x:Bind Path=ChattyManager.Chatty.Count, Converter={StaticResource EqualsZeroVisibilityConverter}, Mode=OneWay}" />
            </Viewbox>
            <RefreshContainer
                Grid.Row="3"
                Margin="6,0,0,0"
                HorizontalAlignment="Stretch"
                RefreshRequested="ChattyPullRefresh"
                Visibility="{x:Bind Path=ChattyManager.IsFullUpdateHappening, Converter={StaticResource NotBoolToVisConverter}, Mode=OneWay}">
                <ListView
                    x:Name="ThreadList"
                    IsItemClickEnabled="True"
                    ItemClick="ThreadList_ItemClick"
                    ItemContainerStyle="{StaticResource ThreadCommentListViewItemStyle}"
                    ItemsSource="{x:Bind GroupedChattyView.View, Mode=OneWay}"
                    Loaded="ThreadListLoaded"
                    PointerEntered="ListPointerEntered"
                    SelectionMode="None"
                    ShowsScrollingPlaceholders="False">
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate>
                            <!--
                                ItemsUpdatingScrollMode - https://docs.microsoft.com/en-us/uwp/api/windows.ui.xaml.controls.itemsupdatingscrollmode?view=winrt-19041
                                There's not really a good solution here. No matter what happens something's going to shift. At least there's animations.
                            -->
                            <ItemsStackPanel AreStickyGroupHeadersEnabled="True" />
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <ListView.GroupStyle>
                        <GroupStyle>
                            <GroupStyle.HeaderContainerStyle>
                                <Style BasedOn="{StaticResource ChattyThreadHeader}" TargetType="ListViewHeaderItem" />
                            </GroupStyle.HeaderContainerStyle>
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate x:DataType="collections:IReadOnlyObservableGroup">
                                    <local:ThreadGroupHeader AddThreadTabClicked="AddTabThreadClicked" CommentThread="{x:Bind (model:CommentThread)Key, Mode=OneWay}" />
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                    <ListView.ItemTemplate>
                        <DataTemplate x:DataType="model:Comment">
                            <local:PostListViewItem
                                CanThreadTruncate="True"
                                Comment="{x:Bind Mode=OneWay}"
                                LinkClicked="HandleLinkClicked"
                                ShellMessage="ShellMessage"
                                ShowReply="ShowReplyClicked"
                                UntruncateThread="UntruncateClicked" />
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </RefreshContainer>
            <Button
                x:Name="GoToChattyTopButton"
                Grid.Row="3"
                Grid.Column="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Background="Transparent"
                BorderThickness="0"
                Click="GoToChattyTopClicked"
                Visibility="Collapsed">
                <Button.Content>
                    <Grid Opacity=".75">
                        <Ellipse
                            Width="32"
                            Height="32"
                            Fill="{ThemeResource SystemAccentColor}" />
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            FontFamily="{ThemeResource SymbolThemeFontFamily}"
                            FontSize="20"
                            Foreground="White"
                            Text="" />
                    </Grid>
                </Button.Content>
            </Button>
            <Grid
                x:Name="replyBox"
                Grid.Row="3"
                Grid.Column="0"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                x:Load="{x:Bind SelectedComment, Converter={StaticResource NullToBooleanConverter}, Mode=OneWay}"
                Background="{StaticResource ReplyHeaderBrush}"
                CornerRadius="4,0,0,0"
                Opacity="0"
                Visibility="{x:Bind SelectedComment.ShowReply, Mode=OneWay, Converter={StaticResource BoolToVisConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid
                    Grid.Row="0"
                    Margin="8"
                    HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Viewbox
                        Grid.Column="0"
                        HorizontalAlignment="Left"
                        StretchDirection="DownOnly">
                        <TextBlock VerticalAlignment="Center" FontSize="{ThemeResource ReplyHeaderFontSize}">
                            <Run Text="Replying to " />
                            <Run FontWeight="Bold" Text="{x:Bind SelectedComment.Author, Mode=OneWay}" />
                        </TextBlock>
                    </Viewbox>
                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                        <Button
                            Click="ToggleLargeReply"
                            Content="&#xE740;"
                            Style="{StaticResource InlineButton}"
                            ToolTipService.ToolTip="Expand reply box"
                            Visibility="{x:Bind Settings.LargeReply, Converter={StaticResource NotBoolToVisConverter}, Mode=OneWay}" />
                        <Button
                            Click="ToggleLargeReply"
                            Content="&#xE73F;"
                            Style="{StaticResource InlineButton}"
                            ToolTipService.ToolTip="Shrink reply box"
                            Visibility="{x:Bind Settings.LargeReply, Converter={StaticResource BoolToVisConverter}, Mode=OneWay}" />
                        <Button
                            Click="ScrollToReplyPostClicked"
                            Content="&#xF716;"
                            Style="{StaticResource InlineButton}"
                            ToolTipService.ToolTip="Scroll to post" />
                        <Button
                            Click="CloseReplyClicked"
                            Content="&#xE8BB;"
                            Style="{StaticResource InlineButton}"
                            ToolTipService.ToolTip="Close reply" />
                    </StackPanel>
                </Grid>
                <Grid
                    Grid.Row="1"
                    Margin="4,0,0,0"
                    Padding="8,0,8,8"
                    Background="{ThemeResource SelectedPostBackgroundBrush}"
                    CornerRadius="4,0,0,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="1*" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="3*" />
                    </Grid.RowDefinitions>
                    <ScrollViewer
                        x:Name="ReplyToCommentScrollViewer"
                        Grid.Row="0"
                        MinHeight="50"
                        Margin="0,4,0,0"
                        HorizontalScrollMode="Disabled">
                        <local:RichPostView
                            DataContext="{x:Bind SelectedComment, Mode=OneWay}"
                            LinkClicked="LinkClicked"
                            ShellMessage="ShellMessage" />
                    </ScrollViewer>
                    <toolkit:GridSplitter
                        Grid.Row="1"
                        Background="Transparent"
                        ResizeBehavior="BasedOnAlignment"
                        ResizeDirection="Auto">
                        <toolkit:GridSplitter.Element>
                            <Grid>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    FontFamily="{ThemeResource SymbolThemeFontFamily}"
                                    Foreground="DarkGray"
                                    IsHitTestVisible="False"
                                    Text="&#xE76F;" />
                            </Grid>
                        </toolkit:GridSplitter.Element>
                    </toolkit:GridSplitter>
                    <local:PostContol
                        x:Name="replyControl"
                        Grid.Row="2"
                        Margin="0,4,0,0"
                        HorizontalAlignment="Stretch"
                        Closed="ReplyControl_Closed"
                        DataContext="{x:Bind SelectedComment, Mode=OneWay}"
                        ShellMessage="ShellMessage" />
                </Grid>
            </Grid>
        </Grid>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="InputTypeStates">
                <VisualState>
                    <VisualState.StateTriggers>
                        <common:InputTypeTrigger PointerType="Mouse" TargetElement="{x:Bind ThreadList}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="GoToChattyTopButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <common:InputTypeTrigger PointerType="Touch" TargetElement="{x:Bind ThreadList}" />
                        <common:InputTypeTrigger PointerType="Pen" TargetElement="{x:Bind ThreadList}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="GoToChattyTopButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</views:ShellTabView>
<!--  ReSharper restore UnusedMember.Local  -->
<!--  ReSharper restore Xaml.RedundantResource  -->
<!--  ReSharper restore NotAccessedField.Local  -->
